#When building from root, the toolset can be found by adding this to the
#beginning of project-config:

path-constant TOP : . ;
path-constant boost-build-ext-path : $(TOP) ;
local boost-build-path = [ modules.peek : BOOST_BUILD_PATH ] ;
modules.poke : BOOST_BUILD_PATH : $(boost-build-ext-path) $(boost-build-path) ;
ECHO "Jamroot::BOOST_BUILD_PATH = " [ modules.peek : BOOST_BUILD_PATH ] ;
ECHO "Jamroot::BOOST_ROOT = " [ modules.peek : BOOST_ROOT ] ;

local BOOST_ROOT = [ modules.peek : BOOST_ROOT ] ;
#local BOOST_ROOT = C:/cygwin/home/rdzbek/c++/boost_1_53_0 ;
#local BOOST_ROOT = /home/rdzbek/c++/boost_1_51_0 ;
use-project boost : $(BOOST_ROOT) ;

project
   : requirements
      <toolset>gcc:<cxxflags>"-std=c++0x -fdump-class-hierarchy"
      <link>static
      <runtime-link>static
      <use>/boost//headers
      
      <define>BOOST_ALL_NO_LIB
      #<source>/boost//system #<define>BOOST_SYSTEM_NO_LIB
      # does NOT LINK, NOT BUILD <dependency>/boost//system
      # DOES LINK - but does it build? YES
      <library>/boost//system
      # does NOT LINK, does NOT BUILD <use>/boost//system
    
    #<source>/boost//headers # boost.testing
    #<source>/boost//date_time #<define>BOOST_DATE_TIME_NO_LIB
;


exe executable_X : [ glob *.cpp ] ;
